This tool will process the given input based on the `graph_type` field and return structured data necessary to construct a valid chart or table.
The `data` field in the input provides the values needed to generate the chart.
The tool will extract and format these values according to predefined data structures.
If the `data` field does not conform to these rules, the tool will reject the chart and return an empty `graph_data` output.

Rules for Data Validation and Formatting:

For Line and Bar Charts:
`data` must contain x_values and y_values, both as arrays of numbers.
If the chart is a bar chart, x_values must contain integers (rounded if necessary).
The lengths of x_values and y_values must be equal.
For Pie Charts:
`data` must contain values (array of numbers) and labels (array of strings).
values and labels must be equal in length.
For Stock Charts:
`data` must contain dates, open, high, low, and close.
All arrays must have the same length.
For Tables:
`data` must contain rows (nested arrays of strings) and columns (array of column names).
Each row must match the length of columns.

Chart Rejection Criteria:

If `data` does not match the expected format for the given `graph_type`, the tool will not generate a chart.
If the input contains missing, inconsistent, or misformatted `data`, the tool will return an empty `graph_data` output instead of an invalid chart.
The tool must not guess or infer missing valuesâ€”only valid, structured data is accepted.

```json
{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
        "graph_data": {
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "x_values": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "y_values": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "caption": { "type": "string" },
                        "x_label": { "type": "string" },
                        "y_label": { "type": "string" }
                    },
                    "required": ["x_values", "y_values", "caption", "x_label", "y_label"]
                },
                {
                    "type": "object",
                    "properties": {
                        "values": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "labels": { "type": "array", "items": { "type": "string" }, "minItems": 1 },
                        "caption": { "type": "string" }
                    },
                    "required": ["values", "labels", "caption"]
                },
                {
                    "type": "object",
                    "properties": {
                        "dates": { "type": "array", "items": { "type": "string", "format": "date" }, "minItems": 1 },
                        "open": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "high": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "low": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "close": { "type": "array", "items": { "type": "number" }, "minItems": 1 },
                        "caption": { "type": "string" }
                    },
                    "required": ["dates", "open", "high", "low", "close", "caption"]
                },
                {
                    "type": "object",
                    "properties": {
                        "rows": {
                            "type": "array",
                            "items": { "type": "array", "items": { "type": "string" } },
                            "minItems": 1
                        },
                        "columns": { "type": "array", "items": { "type": "string" }, "minItems": 1 },
                        "caption": { "type": "string" }
                    },
                    "required": ["rows", "columns", "caption"]
                }
            ]
        }
    },
    "required": ["graph_data"]
}
```

<Input>
```json
{
"graph_type": {{{graph_type}}},
"text_id": {{{text_id}}},
"data": {{{data}}},
"purpose": {{{purpose}}},
"x_label": {{{x_label}}},
"y_label": {{{y_label}}},
}
```
</Input>

<Output>
    {
       "graph_data": {